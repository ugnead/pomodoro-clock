{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chuliganas\\\\Desktop\\\\doc\\\\pomodoro-clock\\\\app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst audio = document.getElementById('beep');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakCount: 5,\n      sessionCount: 25,\n      clockCount: 25 * 60,\n      currentTimer: 'Session',\n      loop: undefined,\n      isPlaying: false\n    };\n\n    this.handlePlayPause = () => {\n      const {\n        isPlaying\n      } = this.state;\n\n      if (isPlaying) {\n        clearInterval(this.loop);\n        this.setState({\n          isPlaying: false\n        });\n      } else {\n        this.setState({\n          isPlaying: true\n        });\n        this.loop = setInterval(() => {\n          const {\n            clockCount,\n            currentTimer,\n            breakCount,\n            sessionCount\n          } = this.state;\n\n          if (clockCount === 0) {\n            this.setState({\n              currentTimer: currentTimer === 'Session' ? 'Break' : 'Session',\n              clockCount: currentTimer === 'Session' ? breakCount * 60 : sessionCount * 60\n            });\n            audio.play();\n            console.log(audio);\n          } else {\n            this.setState({\n              clockCount: clockCount - 1\n            });\n          }\n        }, 1000);\n      }\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        breakCount: 5,\n        sessionCount: 25,\n        clockCount: 25 * 60,\n        currentTimer: 'Session',\n        isPlaying: false\n      });\n      clearInterval(this.loop);\n      audio.pause();\n      audio.currentTime = 0;\n    };\n\n    this.convertToTime = count => {\n      let minutes = Math.floor(count / 60);\n      let seconds = count % 60;\n      minutes = minutes < 10 ? '0' + minutes : minutes;\n      seconds = seconds < 10 ? '0' + seconds : seconds;\n      return `${minutes}:${seconds}`;\n    };\n\n    this.handleBreakDecrease = () => {\n      const {\n        breakCount,\n        isPlaying,\n        currentTimer\n      } = this.state;\n\n      if (breakCount > 1) {\n        if (!isPlaying && currentTimer === 'Break') {\n          this.setState({\n            breakCount: breakCount - 1,\n            clockCount: (breakCount - 1) * 60\n          });\n        } else {\n          this.setState({\n            breakCount: breakCount - 1\n          });\n        }\n      }\n    };\n\n    this.handleBreakIncrease = () => {\n      const {\n        breakCount,\n        isPlaying,\n        currentTimer\n      } = this.state;\n\n      if (breakCount < 60) {\n        if (!isPlaying && currentTimer === 'Break') {\n          this.setState({\n            breakCount: breakCount + 1,\n            clockCount: (breakCount + 1) * 60\n          });\n        } else {\n          this.setState({\n            breakCount: breakCount + 1\n          });\n        }\n      }\n    };\n\n    this.handleSessionDecrease = () => {\n      const {\n        sessionCount,\n        isPlaying,\n        currentTimer\n      } = this.state;\n\n      if (sessionCount > 1) {\n        if (!isPlaying && currentTimer === 'Session') {\n          this.setState({\n            sessionCount: sessionCount - 1,\n            clockCount: (sessionCount - 1) * 60\n          });\n        } else {\n          this.setState({\n            sessionCount: sessionCount - 1\n          });\n        }\n      }\n    };\n\n    this.handleSessionIncrease = () => {\n      const {\n        sessionCount,\n        isPlaying,\n        currentTimer\n      } = this.state;\n\n      if (sessionCount < 60) {\n        if (!isPlaying && currentTimer === 'Session') {\n          this.setState({\n            sessionCount: sessionCount + 1,\n            clockCount: (sessionCount + 1) * 60\n          });\n        } else {\n          this.setState({\n            sessionCount: sessionCount + 1\n          });\n        }\n      }\n    };\n\n    this.loop = undefined;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loop);\n  }\n\n  render() {\n    const {\n      breakCount,\n      sessionCount,\n      clockCount,\n      currentTimer,\n      isPlaying\n    } = this.state;\n    const breakProps = {\n      title: 'Break',\n      count: breakCount,\n      handleDecrease: this.handleBreakDecrease,\n      handleIncrease: this.handleBreakIncrease\n    };\n    const sessionProps = {\n      title: 'Session',\n      count: sessionCount,\n      handleDecrease: this.handleSessionDecrease,\n      handleIncrease: this.handleSessionIncrease\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box col-md-8 text-center m-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clock-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"timer-label\",\n            children: currentTimer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"time-left\",\n              children: this.convertToTime(clockCount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"start_stop\",\n              onClick: this.handlePlayPause,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `icon fas fa-${isPlaying ? 'pause' : 'play'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"reset\",\n              onClick: this.handleReset,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon fas fa-sync\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(SetTimer, { ...breakProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SetTimer, { ...sessionProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst SetTimer = props => {\n  const id = props.title.toLowerCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: `${id}-label`,\n      children: [props.title, \" Length\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: `${id}-decrement`,\n        onClick: props.handleDecrease,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-minus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: `${id}-length`,\n        children: props.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `${id}-increment`,\n        onClick: props.handleIncrease,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 13\n  }, this);\n};\n\n_c = SetTimer;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 222,\n  columnNumber: 26\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"SetTimer\");","map":{"version":3,"sources":["C:/Users/Chuliganas/Desktop/doc/pomodoro-clock/app/src/index.js"],"names":["React","ReactDOM","audio","document","getElementById","App","Component","constructor","props","state","breakCount","sessionCount","clockCount","currentTimer","loop","undefined","isPlaying","handlePlayPause","clearInterval","setState","setInterval","play","console","log","handleReset","pause","currentTime","convertToTime","count","minutes","Math","floor","seconds","handleBreakDecrease","handleBreakIncrease","handleSessionDecrease","handleSessionIncrease","componentWillUnmount","render","breakProps","title","handleDecrease","handleIncrease","sessionProps","SetTimer","id","toLowerCase"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst audio = document.getElementById('beep');\r\n\r\n        class App extends React.Component {\r\n          constructor(props) {\r\n            super(props);\r\n            this.loop = undefined;\r\n          }\r\n          \r\n          state = {\r\n            breakCount: 5,\r\n            sessionCount: 25,\r\n            clockCount: 25 * 60,\r\n            currentTimer: 'Session',\r\n            loop: undefined,\r\n            isPlaying: false\r\n          }\r\n          \r\n          handlePlayPause = () => {\r\n            const {isPlaying} = this.state;\r\n            \r\n            if(isPlaying) {\r\n              clearInterval(this.loop);\r\n              this.setState({\r\n                isPlaying: false\r\n              });\r\n            } else {\r\n              this.setState({\r\n                isPlaying: true\r\n              });\r\n              \r\n              this.loop = setInterval(() => {\r\n                const { clockCount, \r\n                       currentTimer, \r\n                       breakCount, \r\n                       sessionCount\r\n                      } = this.state;\r\n                \r\n                if(clockCount === 0) {\r\n                  this.setState({\r\n                    currentTimer: (currentTimer === 'Session') ? 'Break' : 'Session',\r\n                    clockCount: (currentTimer === 'Session') ? (breakCount * 60) : (sessionCount * 60)\r\n                  });\r\n                  \r\n                  audio.play();\r\n                  console.log(audio);\r\n                  \r\n                } else {\r\n                  this.setState({\r\n                    clockCount: clockCount - 1\r\n                  });\r\n                }\r\n              }, 1000);\r\n            }\r\n          }\r\n          \r\n          handleReset = () => {\r\n            this.setState({\r\n              breakCount: 5,\r\n              sessionCount: 25,\r\n              clockCount: 25 * 60,\r\n              currentTimer: 'Session',\r\n              isPlaying: false\r\n            });\r\n            \r\n            clearInterval(this.loop);\r\n            \r\n            audio.pause();\r\n            audio.currentTime = 0;\r\n          }\r\n          \r\n          componentWillUnmount() {\r\n            clearInterval(this.loop);\r\n          }\r\n          \r\n          convertToTime = (count) => {\r\n            let minutes = Math.floor(count / 60);\r\n            let seconds = count % 60;\r\n            \r\n            minutes = minutes < 10 ? ('0'+ minutes) : minutes;\r\n            seconds = seconds < 10 ? ('0'+ seconds) : seconds;\r\n            \r\n            return `${minutes}:${seconds}`;\r\n          }\r\n          \r\n          handleBreakDecrease = () => {\r\n            const {breakCount, isPlaying, currentTimer} = this.state;\r\n            if(breakCount > 1) {\r\n              if(!isPlaying && currentTimer === 'Break') {\r\n                this.setState({\r\n                breakCount: breakCount - 1,\r\n                  clockCount: (breakCount - 1) * 60\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  breakCount: breakCount - 1,\r\n                });\r\n              }\r\n            }\r\n          }\r\n          \r\n          handleBreakIncrease = () => {\r\n            const {breakCount, isPlaying, currentTimer} = this.state;\r\n            if(breakCount < 60) {\r\n              if(!isPlaying && currentTimer === 'Break') {\r\n                this.setState({\r\n                breakCount: breakCount + 1,\r\n                  clockCount: (breakCount + 1) * 60\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  breakCount: breakCount + 1,\r\n                });\r\n              }\r\n            }\r\n          }\r\n          \r\n          handleSessionDecrease = () => {\r\n            const {sessionCount, isPlaying, currentTimer} = this.state;\r\n            if(sessionCount > 1) {\r\n              if(!isPlaying && currentTimer === 'Session') {\r\n                this.setState({\r\n                sessionCount: sessionCount - 1,\r\n                  clockCount: (sessionCount - 1) * 60\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  sessionCount: sessionCount - 1,\r\n                });\r\n              }\r\n            }\r\n          }\r\n          \r\n          handleSessionIncrease = () => {\r\n            const {sessionCount, isPlaying, currentTimer} = this.state;\r\n            \r\n            if(sessionCount < 60) {\r\n              if(!isPlaying && currentTimer === 'Session') {\r\n                this.setState({\r\n                sessionCount: sessionCount + 1,\r\n                  clockCount: (sessionCount + 1) * 60\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  sessionCount: sessionCount + 1,\r\n                });\r\n              }\r\n            }\r\n          }\r\n          \r\n        render() {\r\n          const { breakCount,\r\n                  sessionCount, \r\n                  clockCount,\r\n                  currentTimer,\r\n                  isPlaying\r\n                } = this.state;\r\n          \r\n          const breakProps = {\r\n            title: 'Break',\r\n            count: breakCount,\r\n            handleDecrease: this.handleBreakDecrease,\r\n            handleIncrease: this.handleBreakIncrease\r\n          }\r\n          \r\n          const sessionProps = {\r\n            title: 'Session',\r\n            count: sessionCount,\r\n            handleDecrease: this.handleSessionDecrease,\r\n            handleIncrease: this.handleSessionIncrease\r\n          }\r\n          \r\n          return(\r\n            <div className=\"wrapper d-flex justify-content-center align-items-center\">\r\n              <div className=\"box col-md-8 text-center m-4 rounded-lg\">\r\n                <div className='clock-container'>\r\n                  <h1 id='timer-label'>{currentTimer}</h1>\r\n                  <div>\r\n                    <span id='time-left'>{this.convertToTime(clockCount)}</span>\r\n                    \r\n                    <button id='start_stop' onClick={this.handlePlayPause}>\r\n                      <i className={`icon fas fa-${isPlaying ? 'pause' : 'play'}`}></i>\r\n                    </button>\r\n                    \r\n                    <button  id='reset' onClick={this.handleReset}>\r\n                      <i className='icon fas fa-sync'></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className='d-flex justify-content-around'>\r\n                  <SetTimer {...breakProps} />\r\n                  <SetTimer {...sessionProps} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n         }\r\n        }\r\n        \r\n        const SetTimer = (props) => {\r\n          const id = props.title.toLowerCase();\r\n          return (\r\n            <div className='timer-container'>\r\n              <h1 id={`${id}-label`}>{props.title} Length</h1>\r\n              <div>\r\n                <button id={`${id}-decrement`} onClick={props.handleDecrease}>\r\n                  <i className='fas fa-minus'></i>\r\n                </button>\r\n                \r\n                <span id={`${id}-length`}>{props.count}</span>\r\n                 \r\n                <button id={`${id}-increment`} onClick={props.handleIncrease}>\r\n                  <i className='fas fa-plus'></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        ReactDOM.render( <App />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}